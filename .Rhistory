apply(c(2, 3), mean) %>%
as.data.frame.table() %>%
rename(Round = Var1, Team = Var2, Mean = Freq) %>%
mutate(
Round = as.numeric(Round),
Team = teams_names[as.numeric(Team)],
group = if_else(Team %in% times_escolhidos, Team, "other"),
group = as.factor(group)
) %>%
mutate(
group = fct_relevel(group, "other", after = Inf)
)
pteam_att = ggplot(
team_att %>% filter(group != "other"),
aes(x = Round, y = Mean, group = Team)) +
geom_line(
data = team_att %>% filter(group == "other"),
color = "grey75",
size = .6,
alpha = .5
) +
geom_line(
aes(color = group),
size = .9
) +
labs(
title = "Fator Ataque ao Longo das Rodadas",
subtitle = "Brasileirão Série A",
x = "Rodadas",
y = "Fator Ataque",
color = "Equipes"
) +
scale_color_manual(values = c("Botafogo (RJ)" = "black",
"Atlético Mineiro" = "gold",
"Cruzeiro" = "darkblue",
"Palmeiras" = "#20b06f",
"Atlético Goianiense" = "red4")
) +
theme_minimal() +
theme(
plot.title = element_text(size = 12, hjust = 0.5, face = "bold"),
plot.subtitle = element_text(size = 10, hjust = 0.5),
axis.title.x = element_text(size = 10, margin = margin(t = 10)),
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 10, face = "italic")
)
#| output: false
#| echo: false
#| warning: false
team_def <- draws_of(draws$def) %>%
apply(c(2, 3), mean) %>%
as.data.frame.table() %>%
rename(Round = Var1, Team = Var2, Mean = Freq) %>%
mutate(
Round = as.numeric(Round),
Team = teams_names[as.numeric(Team)],
group = if_else(Team %in% times_escolhidos, Team, "other"),
group = as.factor(group)
) %>%
mutate(
group = fct_relevel(group, "other", after = Inf)
)
pteam_def = ggplot(
team_def %>% filter(group != "other"),
aes(x = Round, y = Mean, group = Team)) +
geom_line(
data = team_att %>% filter(group == "other"),
color = "grey75",
size = .6,
alpha = .5
) +
geom_line(
aes(color = group),
size = .9
) +
labs(
title = "Fator Defesa ao Longo das Rodadas",
subtitle = "Brasileirão Série A",
x = "Rodadas",
y = "Fator Defesa",
color = "Equipes"
) +
scale_color_manual(values = c("Botafogo (RJ)" = "black",
"Atlético Mineiro" = "gold",
"Cruzeiro" = "darkblue",
"Palmeiras" = "#20b06f",
"Atlético Goianiense" = "red4")
) +
theme_minimal() +
theme(
plot.title = element_text(size = 12, hjust = 0.5, face = "bold"),
plot.subtitle = element_text(size = 10, hjust = 0.5),
axis.title.x = element_text(size = 10, margin = margin(t = 10)),
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 10, face = "italic")
)
#| output: true
#| echo: false
#| warning: false
gridExtra::grid.arrange(pteam_att, pteam_def)
#| output: true
#| echo: false
#| warning: false
gridExtra::grid.arrange(pteam_att, pteam_def, ncol=2)
#| output: false
#| echo: false
#| warning: false
team_def <- draws_of(draws$def) %>%
apply(c(2, 3), mean) %>%
as.data.frame.table() %>%
rename(Round = Var1, Team = Var2, Mean = Freq) %>%
mutate(
Round = as.numeric(Round),
Team = teams_names[as.numeric(Team)],
group = if_else(Team %in% times_escolhidos, Team, "other"),
group = as.factor(group)
) %>%
mutate(
group = fct_relevel(group, "other", after = Inf)
)
pteam_def = ggplot(
team_def %>% filter(group != "other"),
aes(x = Round, y = Mean, group = Team)) +
geom_line(
data = team_att %>% filter(group == "other"),
color = "grey75",
size = .6,
alpha = .5
) +
geom_line(
aes(color = group),
size = .9
) +
labs(
title = "Fator Defesa ao Longo das Rodadas",
subtitle = "Brasileirão Série A",
x = "Rodadas",
y = "Fator Defesa",
color = "Equipes"
) +
scale_color_manual(values = c("Botafogo (RJ)" = "black",
"Atlético Mineiro" = "gold",
"Cruzeiro" = "darkblue",
"Palmeiras" = "#20b06f",
"Atlético Goianiense" = "red4")
) +
theme_minimal() +
theme(
plot.title = element_text(size = 12, hjust = 0.5, face = "bold"),
plot.subtitle = element_text(size = 10, hjust = 0.5),
axis.title.x = element_text(size = 10, margin = margin(t = 10)),
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 10, face = "italic"),
legend.position = "bottom"
)
#| output: false
#| echo: false
#| warning: false
times_escolhidos = c("Botafogo (RJ)", "Atlético Mineiro", "Cruzeiro", "Palmeiras", "Atlético Goianiense")
team_att <- draws_of(draws$att) %>%
apply(c(2, 3), mean) %>%
as.data.frame.table() %>%
rename(Round = Var1, Team = Var2, Mean = Freq) %>%
mutate(
Round = as.numeric(Round),
Team = teams_names[as.numeric(Team)],
group = if_else(Team %in% times_escolhidos, Team, "other"),
group = as.factor(group)
) %>%
mutate(
group = fct_relevel(group, "other", after = Inf)
)
pteam_att = ggplot(
team_att %>% filter(group != "other"),
aes(x = Round, y = Mean, group = Team)) +
geom_line(
data = team_att %>% filter(group == "other"),
color = "grey75",
size = .6,
alpha = .5
) +
geom_line(
aes(color = group),
size = .9
) +
labs(
title = "Fator Ataque ao Longo das Rodadas",
subtitle = "Brasileirão Série A",
x = "Rodadas",
y = "Fator Ataque",
color = "Equipes"
) +
scale_color_manual(values = c("Botafogo (RJ)" = "black",
"Atlético Mineiro" = "gold",
"Cruzeiro" = "darkblue",
"Palmeiras" = "#20b06f",
"Atlético Goianiense" = "red4")
) +
theme_minimal() +
theme(
plot.title = element_text(size = 12, hjust = 0.5, face = "bold"),
plot.subtitle = element_text(size = 10, hjust = 0.5),
axis.title.x = element_text(size = 10, margin = margin(t = 10)),
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 10, face = "italic"),
legend.position = "none"
)
#| output: false
#| echo: false
#| warning: false
team_def <- draws_of(draws$def) %>%
apply(c(2, 3), mean) %>%
as.data.frame.table() %>%
rename(Round = Var1, Team = Var2, Mean = Freq) %>%
mutate(
Round = as.numeric(Round),
Team = teams_names[as.numeric(Team)],
group = if_else(Team %in% times_escolhidos, Team, "other"),
group = as.factor(group)
) %>%
mutate(
group = fct_relevel(group, "other", after = Inf)
)
pteam_def = ggplot(
team_def %>% filter(group != "other"),
aes(x = Round, y = Mean, group = Team)) +
geom_line(
data = team_att %>% filter(group == "other"),
color = "grey75",
size = .6,
alpha = .5
) +
geom_line(
aes(color = group),
size = .9
) +
labs(
title = "Fator Defesa ao Longo das Rodadas",
subtitle = "Brasileirão Série A",
x = "Rodadas",
y = "Fator Defesa",
color = "Equipes"
) +
scale_color_manual(values = c("Botafogo (RJ)" = "black",
"Atlético Mineiro" = "gold",
"Cruzeiro" = "darkblue",
"Palmeiras" = "#20b06f",
"Atlético Goianiense" = "red4")
) +
theme_minimal() +
theme(
plot.title = element_text(size = 12, hjust = 0.5, face = "bold"),
plot.subtitle = element_text(size = 10, hjust = 0.5),
axis.title.x = element_text(size = 10, margin = margin(t = 10)),
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 10, face = "italic"),
legend.position = "bottom"
)
#| output: true
#| echo: false
#| warning: false
gridExtra::grid.arrange(pteam_att, pteam_def, ncol=2)
#| output: true
#| echo: false
#| warning: false
pteam_def
#| output: false
#| echo: false
#| warning: false
times_escolhidos = c("Botafogo (RJ)", "Atlético Mineiro", "Cruzeiro", "Palmeiras", "Atlético Goianiense")
team_att <- draws_of(draws$att) %>%
apply(c(2, 3), mean) %>%
as.data.frame.table() %>%
rename(Round = Var1, Team = Var2, Mean = Freq) %>%
mutate(
Round = as.numeric(Round),
Team = teams_names[as.numeric(Team)],
group = if_else(Team %in% times_escolhidos, Team, "other"),
group = as.factor(group)
) %>%
mutate(
group = fct_relevel(group, "other", after = Inf)
)
pteam_att = ggplot(
team_att %>% filter(group != "other"),
aes(x = Round, y = Mean, group = Team)) +
geom_line(
data = team_att %>% filter(group == "other"),
color = "grey75",
size = .6,
alpha = .5
) +
geom_line(
aes(color = group),
size = .9
) +
labs(
title = "Fator Ataque ao Longo das Rodadas",
subtitle = "Brasileirão Série A",
x = "Rodadas",
y = "Fator Ataque",
color = "Equipes"
) +
scale_color_manual(values = c("Botafogo (RJ)" = "black",
"Atlético Mineiro" = "gold",
"Cruzeiro" = "darkblue",
"Palmeiras" = "#20b06f",
"Atlético Goianiense" = "red4")
) +
theme_minimal() +
theme(
plot.title = element_text(size = 12, hjust = 0.5, face = "bold"),
plot.subtitle = element_text(size = 10, hjust = 0.5),
axis.title.x = element_text(size = 10, margin = margin(t = 10)),
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 10, face = "italic")
)
#| output: false
#| echo: false
#| warning: false
team_def <- draws_of(draws$def) %>%
apply(c(2, 3), mean) %>%
as.data.frame.table() %>%
rename(Round = Var1, Team = Var2, Mean = Freq) %>%
mutate(
Round = as.numeric(Round),
Team = teams_names[as.numeric(Team)],
group = if_else(Team %in% times_escolhidos, Team, "other"),
group = as.factor(group)
) %>%
mutate(
group = fct_relevel(group, "other", after = Inf)
)
pteam_def = ggplot(
team_def %>% filter(group != "other"),
aes(x = Round, y = Mean, group = Team)) +
geom_line(
data = team_att %>% filter(group == "other"),
color = "grey75",
size = .6,
alpha = .5
) +
geom_line(
aes(color = group),
size = .9
) +
labs(
title = "Fator Defesa ao Longo das Rodadas",
subtitle = "Brasileirão Série A",
x = "Rodadas",
y = "Fator Defesa",
color = "Equipes"
) +
scale_color_manual(values = c("Botafogo (RJ)" = "black",
"Atlético Mineiro" = "gold",
"Cruzeiro" = "darkblue",
"Palmeiras" = "#20b06f",
"Atlético Goianiense" = "red4")
) +
theme_minimal() +
theme(
plot.title = element_text(size = 12, hjust = 0.5, face = "bold"),
plot.subtitle = element_text(size = 10, hjust = 0.5),
axis.title.x = element_text(size = 10, margin = margin(t = 10)),
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 10, face = "italic")
)
#| output: true
#| echo: false
#| warning: false
pteam_att
#| output: true
#| echo: false
#| warning: false
pteam_def
6.57e-05 < 1.2e-06
6.57e-05 > 1.2e-06
6.57e-05 < 1.781777e-05
6.57e-05 > 1.781777e-05
6.57e-05 > 7.57e-05
6.57e-05 < 7.57e-05
6.57e-05 < 7.23e-05
mcmc_areas(fit1,
pars = c("att[1]", "def[20]", "home[10]"),
prob = 0.95) + ggtitle("Distribuições a Posteriori",
"Mediana e Intervalo de Credibilidade 95%")
mcmc_areas(draws,
pars = c("att[1]", "def[20]", "home[10]"),
prob = 0.95) + ggtitle("Distribuições a Posteriori",
"Mediana e Intervalo de Credibilidade 95%")
#| output: true
#| echo: false
#| warning: false
#| tbl-cap: "Verossimilhança Preditiva"
tbl_pred = tibble(
"Estático" = predictive_likelihood_1,
"Dinâmico" = 7.23e-06#predictive_likelihood_2
)
kbl(tbl_pred)
usethis::use_mit_license()
load_all()
devtools::load_all()
devtools::check()
install()
library(devtools)
install()
use_test("load_data")
test()
use_package("footStats")
use_package("FootStats")
document()
check()
install()
devtools::use_package('jsonlite')
library(devtools)
use_package(jsonlite)
use_package('jsonlite')
use_package('utils')
httr::
use_package('httr')
use_test()
use_test('load_data')
test()
test()
test()
load_data('invalid', 'brasileirao_a', file = 'match_history')
check()
check()
check()
check()
library(devtools)
check()
install()
install()
install()
library(devtools)
use_r('split_train_test')
FootStats::load_data('brazil', 'brasileirao_a', 'match_history')
df= FootStats::load_data('brazil', 'brasileirao_a', 'match_history')
View(df)
unique(as.character(df$season))
unique(df$round)
use_package('dplyr')
load_all()
rlang::last_trace()
load_all()
load_all()
use_r('split_train_test')
load_all()
rlang::last_trace()
load_all()
document()
check()
test()
data.frame(
season = c(rep('2022-2023', 10), rep('2023-2024', 10)),
round = rep(1:10, 2),
team_name = rep(c('Team A', 'Team B', 'Team C'), 7),
opponent = rep(c('Team X', 'Team Y', 'Team Z'), 7),
venue = rep(c('Home', 'Away'), 10),
some_other_col = runif(20)
)
data.frame(
season = c(rep('2022-2023', 10), rep('2023-2024', 10)),
round = rep(1:10, 2),
team_name = rep(c('Team A', 'Team B', 'Team C', 'Team A', 'Team B', 'Team C', 'Team A', 'Team B', 'Team C', 'Team A'), 2),
opponent = rep(c('Team X', 'Team Y', 'Team Z', 'Team X', 'Team Y', 'Team Z', 'Team X', 'Team Y', 'Team Z', 'Team X'), 2),
venue = rep(c('Home', 'Away'), 10),
some_other_col = runif(20)
)
df = load_data('brazil', 'brasileirao_a', 'match_history')
split_train_test(df, '2019', 36)
load_all()
split_train_test(df, '2019', 36)
test()
all(df$season == '2022-2023')
df %>% dplyr::filter(season == '2022-2023')
df %>% dplyr::filter(as.character(season) == '2022-2023')
df = df %>%
mutate(season = as.character(season))
View(df)
df = load_data('england', 'premier_league', 'match_history')
df %>% dplyr::filter(season == '2022-2023')
View(df)
df %>% dplyr::filter(season == '2019-2020')
df = df %>% dplyr::filter(season == '2019-2020')
unique(df$season)
df = load_data('england', 'premier_league', 'match_history')
test = split_train_test(df, '2019-2020', 36)
View(test)
View(test[["test"]])
load_all()
test = split_train_test(df, '2019-2020', 36)
View(df)
load_all()
test = split_train_test(df, '2019-2020', 36)
load_all()
test = split_train_test(df, '2019-2020', 36)
load_all()
test = split_train_test(df, '2019-2020', 36)
load_all()
test()
test = split_train_test(df, '2019-2020', 39)
View(df)
View(test)
?match
load_all()
test()
check()
1:3
3:5
(3+1):5
